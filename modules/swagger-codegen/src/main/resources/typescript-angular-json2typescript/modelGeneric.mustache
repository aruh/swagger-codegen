@JsonObject
export class {{classname}} {{#parent}}extends {{{parent}}} {{/parent}}{
{{#additionalPropertiesType}}
    [key: string]: {{{additionalPropertiesType}}}{{#hasVars}} | any{{/hasVars}};

{{/additionalPropertiesType}}

{{#vars}}
    {{#description}}
        /**
        * {{{description}}}
        */
    {{/description}}
    @JsonProperty('{{name}}', {{vendorExtensions.j2tDataType}}{{^required}}, true{{/required}})
    {{name}}{{^required}}?{{/required}}: {{#isEnum}}{{{datatypeWithEnum}}}{{/isEnum}}{{^isEnum}}{{{datatype}}}{{/isEnum}} = {{vendorExtensions.j2tDefaultValue}};

{{/vars}}
}{{#hasEnums}}
export namespace {{classname}} {
{{#vars}}
    {{#isEnum}}
        export type {{enumName}} = {{#allowableValues}}{{#enumVars}}{{{value}}}{{^-last}} | {{/-last}}{{/enumVars}}{{/allowableValues}};
        export const {{enumName}} = {
        {{#allowableValues}}
            {{#enumVars}}
                {{name}}: {{{value}}} as {{enumName}}{{^-last}},{{/-last}}
            {{/enumVars}}
        {{/allowableValues}}
        }
    {{/isEnum}}
{{/vars}}
}{{/hasEnums}}